#! /usr/bin/env escript

%% supposed this script located in ooe root
-define(OOE_PATH, os:getenv("OOE_HOME")).
-define(LIBS_PATH, ?OOE_PATH ++ "/ebin").
-define(SCRIPT_NAME, filename:basename(escript:script_name())).
-define(COMPILE_OPTIONS, [return_errors, nowarn_unused_vars]).
-define(ERROR(Msg), io:format("error: ~s~n", [Msg])).

help() ->
    io:format(""
    "Usage: "++?SCRIPT_NAME++" [options] [.erl file]~n"
    "Options:~n"
    "\t[-h | --help]  Prints this help~n").

main([]) -> help();
main(["-h"| _]) -> help();
main(["--help"| _]) -> help();
main([FileName | _Args]) ->
    case filename:extension(FileName) of
        ".erl" ->
            compile_erl_src(FileName);
        "" ->
            compile_erl_src(FileName ++ ".erl");
        ".cerl" ->
            ?ERROR("compile using ooec");
        Ext ->
            ?ERROR(Ext ++ " extension not supported")
    end.

compile_erl_src(FileName) ->
    case compile:file(FileName, ?COMPILE_OPTIONS) of
        {ok, ModuleName} ->
            load_libs(ModuleName);

        {error, [{_, [{_,_,{_, enoent}}]}], _} ->
            Msg = "File not found!",
            ?ERROR(Msg);

        {error, ErrorList, _WarningList} ->
            ?ERROR(ErrorList)
    end.

load_libs(ModuleName) ->
    case code:add_pathz(?LIBS_PATH) of
        true ->
            run(ModuleName);

        {error, Reason} ->
            ?ERROR("Failed to load libs: " ++ Reason)
    end.

run(ModuleName) ->
    ModuleName:main().
